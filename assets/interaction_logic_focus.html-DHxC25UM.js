import{_ as u,r as a,c as p,o as d,e as t,b as i,w as o,a as n,d as e}from"./app-Ne0PdyYx.js";const r="/assets/image-20240412114646927-MJtZ9foG.png",k={};function v(m,s){const c=a("CodeGroupItem"),l=a("CodeGroup");return d(),p("div",null,[s[1]||(s[1]=t('<p><code>Glass Application SDK</code>在所有实现了<code>ISlideEventListener</code>接口的基类中提供了<code>slideEventViewManager.setCheckViewListener(view)</code>方法，用于设置用户当前的操作焦点，后设置的覆盖先设置的，在实践中我们通过此方法设置用户进入到当前页面的默认操作焦点。</p><p align="center"><img src="'+r+'" alt="image-20240412114646927" width="600"></p><h2 id="kotlin扩展函数" tabindex="-1"><a class="header-anchor" href="#kotlin扩展函数" aria-hidden="true">#</a> Kotlin扩展函数</h2><p>我们在<code>GlassBaseActivity</code>等基类中中提供了面向Kotlin开发者的<code>.focus()</code>扩展函数以及面向Java开发者的<code>.setFocusView(view)</code>函数，当然你也可以通过最原始的<code>.slideEventViewManager.setCheckViewListener(view)</code>来设置操作焦点。</p>',4)),i(l,null,{default:o(()=>[i(c,{title:"GlassBaseActivity.kt"},{default:o(()=>s[0]||(s[0]=[n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{class:"language-kotlin"},[n("code",null,[n("span",{class:"token keyword"},"fun"),e(" ISlideEventViewListener"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"focus"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token function"},"setFocusView"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`

`),n("span",{class:"token keyword"},"fun"),e(),n("span",{class:"token function"},"setFocusView"),n("span",{class:"token punctuation"},"("),e("view"),n("span",{class:"token operator"},":"),e(" ISlideEventViewListener"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    slideEventViewManager`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setCheckViewListener"),n("span",{class:"token punctuation"},"("),e("view"),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1})]),_:1}),s[2]||(s[2]=t(`<p>以下三种写法等价</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>v<span class="token punctuation">.</span>btnConfirm<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">setFocusView</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>btnConfirm<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>slideEventViewManager<span class="token punctuation">.</span><span class="token function">setCheckViewListener</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>btnConfirm<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4))])}const g=u(k,[["render",v],["__file","interaction_logic_focus.html.vue"]]);export{g as default};
