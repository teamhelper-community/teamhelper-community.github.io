import{_ as d,c as e,o as m,e as E}from"./app-Ne0PdyYx.js";const n={};function o(i,t){return m(),e("div",null,t[0]||(t[0]=[E(`<p><code>Glass Application SDK</code> 中的统一交互逻辑已经封装在UI组件内部，由SDK封装的UI组件隐式对外提供。在现有的XR眼镜中，操作交互有物理操作和语音指令两种，而物理操作主要又有<code>触摸板、旋钮和按键</code>三种操作方式，意味着用户可以进行<code>语音指令</code>和<code>单指点击、单指长按、后退、前滑、后滑</code>等人机交互。为了兼容各类物理操作事件，在安卓开发中，我们往往通过以下两个函数来自定义用户的操作行为。</p><div class="language-Kotlin line-numbers-mode" data-ext="Kotlin"><pre class="language-Kotlin"><code>/**
 * 旋钮、按键
 */
override fun onKeyUp(keyCode: Int, event: KeyEvent): Boolean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-Kotlin line-numbers-mode" data-ext="Kotlin"><pre class="language-Kotlin"><code>/**
 * 触摸板
 */
override fun dispatchTouchEvent(event: MotionEvent): Boolean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是因为XR设备形态不一，通过各类旋钮、触摸板、按键产生的操作交互所触发的事件各有差异，参见下表。</p><table><thead><tr><th>设备型号</th><th>单击</th><th>后退</th><th>前滑</th><th>后滑</th><th>前滑移动</th><th>后滑移动</th><th>按键长按</th><th>单指长按</th><th>双指点按</th><th>双指长按</th></tr></thead><tbody><tr><td><em>RokidGlass2</em></td><td><em>KEYCODE_DPAD_CENTER</em></td><td><em>KEYCODE_BACK</em></td><td><em>FORWARD_OR_BACKWARD</em></td><td><em>KEYCODE_DPAD_UP</em></td><td><em>KEYCODE_DPAD_RIGHT</em></td><td><em>KEYCODE_DPAD_LEFT</em></td><td><em>任何按键</em></td><td>/</td><td>/</td><td>/</td></tr><tr><td><em>RokidRGCrown</em></td><td><em>KEYCODE_DPAD_CENTER</em></td><td><em>KEYCODE_BACK</em></td><td><em>KEYCODE_DPAD_RIGHT</em></td><td><em>KEYCODE_DPAD_LEFT</em></td><td><em>KEYCODE_DPAD_RIGHT</em></td><td><em>KEYCODE_DPAD_LEFT</em></td><td><em>任何按键</em></td><td>/</td><td>/</td><td>/</td></tr><tr><td><em>Argooz（希姆通）</em></td><td><em>500</em></td><td><em>KEYCODE_BACK</em></td><td><em>KEYCODE_VOLUME_UP</em></td><td><em>KEYCODE_VOLUME_DOWN</em></td><td><em>KEYCODE_VOLUME_UP</em></td><td><em>KEYCODE_VOLUME_DOWN</em></td><td><em>任何按键</em></td><td>/</td><td>/</td><td>/</td></tr><tr><td><em>Vuzix（虹科）</em></td><td><em>KEYCODE_DPAD_CENTER</em></td><td><em>KEYCODE_BACK</em></td><td><em>KEYCODE_DPAD_RIGHT</em></td><td><em>KEYCODE_DPAD_LEFT</em></td><td><em>KEYCODE_DPAD_RIGHT</em></td><td><em>KEYCODE_DPAD_LEFT</em></td><td><em>任何按键</em></td><td>/</td><td>/</td><td>/</td></tr><tr><td><em>Alps（拜特尔）</em></td><td><em>KEYCODE_ENTER</em></td><td><em>KEYCODE_BACK</em></td><td><em>KEYCODE_DPAD_RIGHT || KEYCODE_PAGE_DOWN</em></td><td><em>KEYCODE_DPAD_LEFT || KEYCODE_PAGE_UP</em></td><td><em>KEYCODE_DPAD_RIGHT || KEYCODE_PAGE_DOWN</em></td><td><em>KEYCODE_DPAD_LEFT || KEYCODE_PAGE_UP</em></td><td><em>任何按键</em></td><td>/</td><td>/</td><td>/</td></tr><tr><td><em>Epson（爱普生）</em></td><td>—</td><td><em>KEYCODE_BACK</em></td><td>—</td><td>—</td><td>—</td><td>—</td><td><em>任何按键</em></td><td>/</td><td>/</td><td>/</td></tr><tr><td><em>Chinvis（谦视）</em></td><td><em>KEYCODE_DPAD_CENTER</em></td><td><em>KEYCODE_BACK</em></td><td><em>KEYCODE_DPAD_RIGHT</em></td><td><em>KEYCODE_DPAD_LEFT</em></td><td>/</td><td>/</td><td><em>任何按键</em></td><td>/</td><td>/</td><td>/</td></tr><tr><td><em>Nibiru（谷东科技）</em></td><td><em>KEYCODE_ENTER</em></td><td><em>KEYCODE_BACK</em></td><td><em>KEYCODE_DPAD_RIGHT</em></td><td><em>KEYCODE_DPAD_LEFT</em></td><td>/</td><td>/</td><td><em>任何按键</em></td><td>/</td><td>/</td><td>/</td></tr><tr><td><em>Qti（蜂巢）</em></td><td><em>onSingleFingerTap</em></td><td><em>onSingleFingerPressAndDownSlip</em></td><td><em>onSingleFingerLongPressAndLeftMove</em></td><td><em>onSingleFingerLongPressAndRightMove</em></td><td><em>MotionEvent.ACTION_DOWN，MotionEvent.ACTION_MOVE</em></td><td><em>MotionEvent.ACTION_DOWN，MotionEvent.ACTION_MOVE</em></td><td><em>onSingleFingerLongPress</em></td><td>√</td><td><em>onDoubleFingerTap</em></td><td><em>√</em></td></tr></tbody></table><p>*<em>表：onKeyUp和dispatchTouchEvent解析出来的KeyCode</em></p><p>因此，我们在<code>Glass Application SDK</code>中对不同设备的交互事件做兼容和封装，并在<code>Glass Application SDK</code> 中，定义了<code>操作逻辑串</code>的概念，所有可被用户进行以上操作交互的<code>View</code>都拥有一个有序的唯一标识<code>sign</code>。除此之外，我们定义一个用户操作焦点的概念<code>focus</code>，<code>Activity</code>中所有所有可被操作交互的<code>View</code>都可被通过<code>View.focus()</code>聚焦为当前的操作焦点。</p>`,7)]))}const _=d(n,[["render",o],["__file","overview_interaction_logic.html.vue"]]);export{_ as default};
