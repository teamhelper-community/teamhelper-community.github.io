import{_ as t,c as r,o as s,e as a}from"./app-Ne0PdyYx.js";const e="/assets/image-20240415093339783-C3mj-1oD.png",n="/assets/image-20240415093516521-B1GKpkc3.png",o={};function l(g,i){return s(),r("div",null,i[0]||(i[0]=[a('<h2 id="ui组件库预览" tabindex="-1"><a class="header-anchor" href="#ui组件库预览" aria-hidden="true">#</a> UI组件库预览</h2><p>AR眼镜应用的开发框架提供了一套全面的UI组件库，这些组件都经过精心设计和实现，以满足XR应用的特殊需求。这些组件不仅易于使用，而且可以高度定制，以适应各种设计语言和用户体验。</p><p><img src="'+e+'" alt="image-20240415093339783"></p><h2 id="ui组件封装思想" tabindex="-1"><a class="header-anchor" href="#ui组件封装思想" aria-hidden="true">#</a> UI组件封装思想</h2><p>我们的UI组件库遵循模块化和可重用的设计原则。每个组件都被设计为一个独立的实体，具有明确的接口和可预见的行为。这使得开发者可以轻松地在各种上下文中使用这些组件，而不必担心依赖或冲突。</p><p>此外，我们的组件库强调可访问性和用户体验。所有的组件都设计得易于使用和理解，同时考虑到了各种可能的用户交互方式。我们的目标是为XR应用开发者提供一套强大的工具，使他们能够创建出引人入胜、易于使用的应用。</p><h2 id="ui组件色彩系统" tabindex="-1"><a class="header-anchor" href="#ui组件色彩系统" aria-hidden="true">#</a> UI组件色彩系统</h2><p><img src="'+n+'" alt="image-20240415093516521"></p><h2 id="组件类型介绍" tabindex="-1"><a class="header-anchor" href="#组件类型介绍" aria-hidden="true">#</a> 组件类型介绍</h2><p>以下是我们提供的主要UI组件：</p><ol><li><strong>按钮(Button)</strong>: 提供了基本的交互功能，如点击、长按等。可以自定义按钮的样式和动作。</li><li><strong>输入框(Input)</strong>: 提供了文本输入功能，支持各种输入法，包括虚拟键盘和语音输入。</li><li><strong>列表项(List Item)</strong>: 为列表提供了基本的单元。可以自定义列表项的内容和样式。</li><li><strong>列表(List)</strong>: 显示一系列的列表项。支持垂直和水平滚动，以及各种滚动动画。</li><li><strong>列表选择器(List Picker)</strong>: 提供了一个方便的界面，允许用户从一系列选项中选择一个。</li><li><strong>对话框(Dialog)</strong>: 提供了一种模态的用户交互方式，可以显示警告、确认信息、或者提供一些选项供用户选择。</li><li><strong>应用内通知(Notification)</strong>: 允许应用在不中断用户当前操作的情况下，向用户提供信息。</li><li><strong>状态栏(Status Bar)</strong>: 显示应用的状态信息，如时间、电量、网络连接等。</li><li><strong>工具栏(Tool Bar)</strong>: 提供了一种方便的方式，将常用的操作或导航选项放在用户容易访问的地方。</li><li><strong>卡片(Card)</strong>: 提供了一种灵活的布局方式，可以包含各种内容，如文字、图片、按钮等。</li><li><strong>弹出菜单/弹层(Expand Layer)</strong>: 提供了一种临时的、上下文相关的额外信息或操作选项。</li></ol>',11)]))}const d=t(o,[["render",l],["__file","overview_ui_components.html.vue"]]);export{d as default};
