import{_ as p,r as c,c as u,o as r,e as l,b as t,a as n,w as e,d as s}from"./app-Ne0PdyYx.js";const d={};function k(v,a){const o=c("CodeGroupItem"),i=c("CodeGroup");return r(),u("div",null,[a[5]||(a[5]=l(`<p><code>Glass Application SDK</code>提供两种语音指令类型，一种是单条普通的语音指令<code>InstructSingle</code>，另一种是数字指令<code>InstructNumber</code>。设置语音指令时需要同时设置拼音、中文和英文。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">open</span> <span class="token keyword">class</span> <span class="token function">InstructSingle</span><span class="token punctuation">(</span><span class="token annotation builtin">@JvmField</span> <span class="token keyword">val</span> pinYin<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token annotation builtin">@JvmField</span> <span class="token keyword">val</span> zh<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token annotation builtin">@JvmField</span> <span class="token keyword">val</span> en<span class="token operator">:</span> String<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">open</span> <span class="token keyword">class</span> <span class="token function">InstructNumber</span><span class="token punctuation">(</span><span class="token annotation builtin">@JvmField</span> <span class="token keyword">val</span> prefix<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token annotation builtin">@JvmField</span> <span class="token keyword">val</span> subfix<span class="token operator">:</span> String<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="设置view的单条语音指令" tabindex="-1"><a class="header-anchor" href="#设置view的单条语音指令" aria-hidden="true">#</a> 设置View的单条语音指令</h2><p><code>Glass Application SDK</code>提供了简单的设置语音指令的方法，所有封装的UI组件都可以通过<code>setInstruct</code>方法快速设置语音指令，当用户说出语音指令<code>确定</code>时将自动触发View的<code>onClick</code>点击事件。</p>`,5)),t(i,null,{default:e(()=>[t(o,{title:"ExampleActivity.kt"},{default:e(()=>a[0]||(a[0]=[n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{class:"language-kotlin"},[n("code",null,[s("v"),n("span",{class:"token punctuation"},"."),s("btnConfirm"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setInstruct"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"InstructSingle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"que ding"')]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"确定"')]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"confirm"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1)])),_:1})]),_:1}),a[6]||(a[6]=n("p",null,[s("建议在实际开发实践当中将语音指令统一管理起来，例如上文的"),n("code",null,"确定"),s("指令我们可以新建个管理类"),n("code",null,"LocalInstruct"),s("重构以上代码。")],-1)),t(i,null,{default:e(()=>[t(o,{title:"LocalInstruct.kt"},{default:e(()=>a[1]||(a[1]=[n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{class:"language-kotlin"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" com"),n("span",{class:"token punctuation"},"."),s("mst"),n("span",{class:"token punctuation"},"."),s("basics"),n("span",{class:"token punctuation"},"."),s("instruct"),n("span",{class:"token punctuation"},"."),s("base"),n("span",{class:"token punctuation"},"."),s(`InstructSingle

`),n("span",{class:"token keyword"},"object"),s(" LocalInstruct "),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"val"),s(" Next"),n("span",{class:"token operator"},":"),s(" InstructSingle "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"InstructSingle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"que ding"')]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"确定"')]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"confirm"')]),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),t(o,{title:"ExampleActivity.kt"},{default:e(()=>a[2]||(a[2]=[n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{class:"language-kotlin"},[n("code",null,[s("v"),n("span",{class:"token punctuation"},"."),s("btnConfirm"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setInstruct"),n("span",{class:"token punctuation"},"("),s("LocalInstruct"),n("span",{class:"token punctuation"},"."),s("Next"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1)])),_:1})]),_:1}),a[7]||(a[7]=n("h2",{id:"设置不依赖view的语音指令",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#设置不依赖view的语音指令","aria-hidden":"true"},"#"),s(" 设置不依赖View的语音指令")],-1)),a[8]||(a[8]=n("p",null,[s("如果开发者想要在页面上添加一个不依赖于View的语音指令也可以通过"),n("code",null,"GlassBaseActivity"),s("的"),n("code",null,"instructManager"),s("对象设置语音指令。")],-1)),t(i,null,{default:e(()=>[t(o,{title:"ExampleActivity.kt"},{default:e(()=>a[3]||(a[3]=[n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{class:"language-kotlin"},[n("code",null,[s("instructManager"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addInstruct"),n("span",{class:"token punctuation"},"("),s(`
    LocalInstruct`),n("span",{class:"token punctuation"},"."),s("ExitApp"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"object"),s(),n("span",{class:"token operator"},":"),s(" IInstructSingleListener "),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"override"),s(),n("span",{class:"token keyword"},"fun"),s(),n("span",{class:"token function"},"onInstructReceive"),n("span",{class:"token punctuation"},"("),s("key"),n("span",{class:"token operator"},":"),s(" String"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token function"},"toast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"收到指令：'),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"$"),n("span",{class:"token expression"},"key")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
            application`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"onTerminate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token function"},"finish"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
            android`),n("span",{class:"token punctuation"},"."),s("os"),n("span",{class:"token punctuation"},"."),s("Process"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"killProcess"),n("span",{class:"token punctuation"},"("),s("android"),n("span",{class:"token punctuation"},"."),s("os"),n("span",{class:"token punctuation"},"."),s("Process"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"myPid"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1})]),_:1}),a[9]||(a[9]=l('<div class="custom-container info"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">INFO</p><h4 id="添加单一指令" tabindex="-1"><a class="header-anchor" href="#添加单一指令" aria-hidden="true">#</a> <strong>添加单一指令</strong></h4><p><code>addInstruct(InstructSingle instruct, IInstructSingleListener instructSingleListener)</code></p><p><strong>参数</strong></p><ul><li><code>instruct</code> - <code>InstructSingle</code> 类型，需要添加的指令。</li><li><code>instructSingleListener</code> - <code>IInstructSingleListener</code> 类型，添加指令的监听器。</li></ul></div><div class="custom-container info"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">INFO</p><h4 id="添加数字范围指令" tabindex="-1"><a class="header-anchor" href="#添加数字范围指令" aria-hidden="true">#</a> <strong>添加数字范围指令</strong></h4><p><code>addInstruct(InstructNumber instructNumber, int startNumber, int endNumber, IInstructNumberListener instructNumberListener)</code></p><p><strong>参数</strong></p><ul><li><code>instructNumber</code> - <code>InstructNumber</code> 类型，需要添加的指令。</li><li><code>startNumber</code> - <code>int</code> 类型，数字指令的起始值。</li><li><code>endNumber</code> - <code>int</code> 类型，数字指令的结束值。</li><li><code>instructNumberListener</code> - <code>IInstructNumberListener</code> 类型，添加指令的监听器。</li></ul></div><div class="custom-container info"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">INFO</p><h4 id="移除单一指令" tabindex="-1"><a class="header-anchor" href="#移除单一指令" aria-hidden="true">#</a> <strong>移除单一指令</strong></h4><p><code>removeInstruct(InstructSingle instruct)</code></p><p><strong>参数</strong></p><ul><li><code>instruct</code> - <code>InstructSingle</code> 类型，需要移除的指令。</li></ul></div><div class="custom-container info"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">INFO</p><h4 id="移除数字范围指令" tabindex="-1"><a class="header-anchor" href="#移除数字范围指令" aria-hidden="true">#</a> <strong>移除数字范围指令</strong></h4><p><code>removeInstruct(InstructNumber instructNumber)</code></p><p><strong>参数</strong></p><ul><li><code>instructNumber</code> - <code>InstructNumber</code> 类型，需要移除的指令。</li></ul></div><h2 id="设置数字语音指令" tabindex="-1"><a class="header-anchor" href="#设置数字语音指令" aria-hidden="true">#</a> 设置数字语音指令</h2>',5)),t(i,null,{default:e(()=>[t(o,{title:"ExampleActivity.kt"},{default:e(()=>a[4]||(a[4]=[n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{class:"language-kotlin"},[n("code",null,[s("instructManager"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addInstruct"),n("span",{class:"token punctuation"},"("),s("CommonNumberInstruct"),n("span",{class:"token punctuation"},"."),s("ZOOM_LEVEL"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(" key"),n("span",{class:"token operator"},":"),s(" String"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},","),s(" number"),n("span",{class:"token operator"},":"),s(" Int "),n("span",{class:"token operator"},"->"),s(`
    `),n("span",{class:"token function"},"setZoom"),n("span",{class:"token punctuation"},"("),s("number"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1})]),_:1}),a[10]||(a[10]=l(`<div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">package</span> com<span class="token punctuation">.</span>mst<span class="token punctuation">.</span>basics<span class="token punctuation">.</span>instruct<span class="token punctuation">.</span>common

<span class="token keyword">import</span> com<span class="token punctuation">.</span>mst<span class="token punctuation">.</span>basics<span class="token punctuation">.</span>device<span class="token punctuation">.</span>Brand
<span class="token keyword">import</span> com<span class="token punctuation">.</span>mst<span class="token punctuation">.</span>basics<span class="token punctuation">.</span>instruct<span class="token punctuation">.</span>base<span class="token punctuation">.</span>InstructNumber
<span class="token keyword">import</span> com<span class="token punctuation">.</span>mst<span class="token punctuation">.</span>basics<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>StringUtil
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Locale

<span class="token keyword">object</span> CommonNumberInstruct <span class="token punctuation">{</span>

    <span class="token comment">/**
     * 缩放级别
     */</span>
    <span class="token annotation builtin">@JvmField</span>
    <span class="token keyword">var</span> ZOOM_LEVEL <span class="token operator">=</span> <span class="token function">InstructNumber</span><span class="token punctuation">(</span>
        prefix <span class="token operator">=</span> prefixZoomLevel<span class="token punctuation">,</span> subfix <span class="token operator">=</span> subfixZoomLevel<span class="token punctuation">,</span> similarity <span class="token operator">=</span> <span class="token number">0.989</span>
    <span class="token punctuation">)</span>


    <span class="token keyword">private</span> <span class="token keyword">val</span> prefixZoomLevel<span class="token operator">:</span> String
        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">val</span> language <span class="token operator">=</span> Locale<span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>language
            <span class="token keyword">val</span> prefix <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtil<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>language<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;en&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token string-literal singleline"><span class="token string">&quot;Zoom level &quot;</span></span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token string-literal singleline"><span class="token string">&quot;缩放级别&quot;</span></span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> prefix
        <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">val</span> subfixZoomLevel<span class="token operator">:</span> String
        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))])}const g=p(d,[["render",k],["__file","interaction_logic_voice.html.vue"]]);export{g as default};
