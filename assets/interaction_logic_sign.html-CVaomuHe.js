import{_ as a,c as e,o as s,e as t}from"./app-Ne0PdyYx.js";const i="/assets/image-20240412101706482-CIBAXgaR.png",c={};function o(l,n){return s(),e("div",null,n[0]||(n[0]=[t('<p><code>Glass Application SDK</code> 中将用户在页面上操作的View规划为一层级，并需要开发者以从左到右、从上而下的顺序主动设置操作标识<code>sign</code>，编制完毕后用户将可以使用物理操作按钮进行顺序操作，如以下示例页面。</p><p align="center"><img src="'+i+`" alt="image-20240412101706482" width="800"></p><h2 id="在布局中设置标记" tabindex="-1"><a class="header-anchor" href="#在布局中设置标记" aria-hidden="true">#</a> 在布局中设置标记</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.mst.basics.slide.widget.v2.GlassButton</span>
    <span class="token attr-name">...</span>
    <span class="token attr-name"><span class="token namespace">app:</span>sign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在代码中设置标记" tabindex="-1"><a class="header-anchor" href="#在代码中设置标记" aria-hidden="true">#</a> 在代码中设置标记</h2><p><code>Glass Application SDK</code> 中的操作标记<code>sign</code>实际上是使用了<code>contentDescription</code>属性用来记录，所以在代码中你也可以直接通过<code>View.setContentDescription</code>来主动设置标记，这一点在给<code>RecyclerView</code>的<code>item</code>编制操作顺序时非常有用。关于如何在<code>RecyclerView</code>设置操作标识将在UI组件章节<a href="ui_components_list">列表组件</a>中详细阐述。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>v<span class="token punctuation">.</span>btnConfirm<span class="token punctuation">.</span>contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1&quot;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7)]))}const d=a(c,[["render",o],["__file","interaction_logic_sign.html.vue"]]);export{d as default};
